<?php

/**
 * @file
 * Contains sandbox_export.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Template\Attribute;

/**
 * Implements hook_help().
 */
function sandbox_export_help($route_name, RouteMatchInterface $route_match)
{
  switch ($route_name) {
    // Main module help for the sandbox_export module.
    case 'help.page.sandbox_export':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Generate pdf from html / Twig with dompdf') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function sandbox_export_theme()
{
  $module_path = drupal_get_path('module', 'sandbox_export');

  return [
    'pdf' => [
      'template' => 'pdf',
      'pattern' => 'pdf_export__',
      'variables' => [
        'header' => NULL,
        'content' => NULL,
        'footer' => NULL,
        'paper_css' => NULL,
        'pdf_css' => NULL,
      ],
      'path' => $module_path . '/templates',
    ],
    'printable_pdf_footer' => [
      'template' => 'printable-footer',
      'pattern' => 'pdf_export_footer__',
      'variables' => [],
      'path' => $module_path . '/templates',
    ],
    'printable_pdf_header' => [
      'template' => 'printable-header',
      'pattern' => 'pdf_export_header__',
      'variables' => [],
      'path' => $module_path . '/templates',
    ],
    'sandbox_export' => [
      'variables' => [
        'hallo' => NULL,
        'name2' => NULL
      ]
    ],
  ];
}

/**
 * Preprocess variables for list of printable printer friendly page.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: Array of participant names.
 */
function template_preprocess_sandbox_export(array &$variables) {
  global $base_url;

  $variables['base_url'] = $base_url . '/' . drupal_get_path('module', 'sandbox_export');

  $language_interface = \Drupal::languageManager()->getCurrentLanguage();
  $variables['html_attributes'] = new Attribute([
    'lang' => $language_interface->getId(),
    'dir' => $language_interface->getDirection(),
  ]);



}
